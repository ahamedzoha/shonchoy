# =================================================================================
# Shonchoy Monorepo Environment Configuration
# =================================================================================
# Copy this file to .env and customize for your environment
# cp .env.example .env

# =================================================================================
# CORE ENVIRONMENT SETTINGS
# =================================================================================

# Application environment (development, staging, production)
ENVIRONMENT=development

# Node.js environment (affects logging and database sync behavior)
NODE_ENV=development

# =================================================================================
# APISIX API GATEWAY CONFIGURATION
# =================================================================================

# APISIX Admin API endpoint (default for local development)
# In production, this should be your APISIX admin URL
APISIX_ADMIN_URL=http://127.0.0.1:9180

# APISIX Admin API Keys (generate secure keys for production)
APISIX_ADMIN_KEY=edd1c9f034335f136f87ad84b625c8f1
APISIX_VIEWER_KEY=4054f7cf07e344346cd3f287985e76a2

# =================================================================================
# ETCD CONFIGURATION (APISIX Backend Store)
# =================================================================================

# ETCD cluster endpoint (for Docker Compose setup)
ETCD_HOST=etcd:2379

# ETCD authentication (leave empty for local development)
ETCD_USERNAME=
ETCD_PASSWORD=

# ETCD TLS certificates (optional, for production with TLS)
ETCD_CERT_FILE=
ETCD_KEY_FILE=
ETCD_CA_FILE=

# =================================================================================
# APISIX DASHBOARD CONFIGURATION
# =================================================================================

# Dashboard JWT secret (generate a secure random string)
DASHBOARD_SECRET=your-secure-jwt-secret-here

# Dashboard session expiration in seconds
DASHBOARD_JWT_EXPIRE=3600

# Dashboard admin credentials
DASHBOARD_ADMIN_USER=admin
DASHBOARD_ADMIN_PASSWORD=secure-admin-password

# =================================================================================
# DATABASE CONFIGURATION (PostgreSQL)
# =================================================================================

# Database connection settings
DB_HOST=localhost
DB_PORT=5432
DB_NAME=shonchoy_auth
DB_USER=postgres
DB_PASSWORD=password

# =================================================================================
# AUTHENTICATION SERVICE CONFIGURATION
# =================================================================================

# Auth service port
PORT=4001

# Base URL for OAuth callbacks (must match your domain)
BASE_URL=http://localhost:4001

# =================================================================================
# JWT TOKEN CONFIGURATION
# =================================================================================
# Generate secure random strings for production (at least 32 characters)
# You can use: openssl rand -base64 32

# JWT access token secret (NEVER commit real secrets to version control)
JWT_ACCESS_SECRET=your-super-secure-access-token-secret-here-at-least-32-chars

# JWT refresh token secret (separate from access token secret)
JWT_REFRESH_SECRET=your-super-secure-refresh-token-secret-here-at-least-32-chars

# Token expiration times
JWT_ACCESS_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# =================================================================================
# OAUTH PROVIDER CONFIGURATION
# =================================================================================
# OAuth providers are OPTIONAL - leave as placeholder values to disable
# Configure only the providers you want to support

# Google OAuth 2.0
# Get credentials from: https://console.developers.google.com/
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# GitHub OAuth
# Get credentials from: https://github.com/settings/developers
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret

# Apple Sign In
# Get credentials from: https://developer.apple.com/account/resources/authkeys/
APPLE_CLIENT_ID=your-apple-client-id
APPLE_TEAM_ID=your-apple-team-id
APPLE_KEY_ID=your-apple-key-id
APPLE_PRIVATE_KEY_PATH=/path/to/AuthKey.p8

# =================================================================================
# SECURITY NOTES
# =================================================================================
# 1. NEVER commit real secrets to version control
# 2. Use different secrets for each environment
# 3. Rotate secrets regularly in production
# 4. Use environment-specific credential stores (AWS Secrets Manager, etc.)
# 5. OAuth credentials should be obtained from respective provider consoles
#
# For production deployment:
# - Use strong, randomly generated secrets
# - Configure proper OAuth redirect URIs
# - Set up HTTPS for OAuth callbacks
# - Use environment-specific databases
# =================================================================================